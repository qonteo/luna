Installation
============
For proper installation you need to clone project from git.

Surroundings
------------

The service can be installed on Windows 10 and CentOS 7 (not tested on other system versions).

Required predefined dependencies:

* Developer package postgresql (for psycopg2 installation, if you use postgresql as database), in CentOS 7 you can
  execute following command:

.. code-block:: bash

    yum install postgresql-server gcc python34-devel file postgresql postgresql-devel

- Python v. 3.5 or higher is required.
- It is strongly recommended to create virtual surroundings for python dependencies installation.
- Python setuptools module can be installed via pip (pip install setuptools).


Dependencies installation
-------------------------

After surroundings installation launch *setup.py* with *install* parameter.

.. code-block:: bash

    python setup.py install

If surrounding is installed correctly, this script will install all dependencies and carry out versioning automatically.

If all dependencies are already installed and only versioning is required, \
launch *versioneer.py* script with *version* parameter from root folder. \
Please note that for versioning *git* files are required.

If you need to install dependencies without versioning, you should use dependencies file \
placed in *luna_faces.egg-info*

.. code-block:: bash

    pip install -r "requires.txt



Configuration
-------------
After dependencies installation configuration file should be set. File is placed in *"./luna_faces/configs/config.conf"*.\

Database creation
-----------------
All databases for service must be created in accordance with *"./luna_faces/configs/config.conf"*.

- Postgresql (require version 9.5 or higher)
- Oracle (require version Oracle Database Express Edition 11g or higher)

Create all required schemes in *postgresql*. For that create table with user name from \
*config.conf*, then launch:

.. code-block:: bash

    python ./base_scripts/db_create.py

If script was executed without errors, all schemes were created successfully. Restarting the script will lead to errors,
indicating that in this table schemes already exist. db_create also creates scripts for further database migration \
(db_repository folder), without these db migration execution is impossible.


If table or user is not yet created, you should execute following commands:

.. code-block:: sql

    psql -U postgres;
    create role luna;
    ALTER USER luna WITH PASSWORD 'luna';
    CREATE DATABASE luna_faces;
    GRANT ALL PRIVILEGES ON DATABASE luna_faces TO luna;
    ALTER ROLE luna WITH LOGIN;


First launch and testing
------------------------
If all previous actions are executed successfully, server is ready to work. To start server please launch *run.py* \
script. While start you can add arguments: server message port and number of workers, servicing the server. \
By default 5030 port is used and one worker is launched. \
Example:

.. code-block:: bash

    ./run.py --workers=8 --port=5030 --config=./configs/myconfig.conf

After server is started, testing is recommended. To perform testing execute command

.. code-block:: bash

    python -m unittest tests.unittests_main

All tests should perform successfully.

